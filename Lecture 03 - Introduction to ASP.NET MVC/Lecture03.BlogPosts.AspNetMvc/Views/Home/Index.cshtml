@{
    Layout = null;
}

@using Lecture03.BlogPosts.EntityFramework.Domain
@model HomeViewModel

@functions {

    const string BlogPostDefaultClassName = "blog-post";
    const string BlogPostActiveClassName = "blog-post--active";

    public string GetBlogPostClassNames(Boolean isTopBlogPost) 
        => !isTopBlogPost 
            ? BlogPostDefaultClassName 
            : $"{BlogPostDefaultClassName} {BlogPostActiveClassName}".Trim();
}

@helper RenderBlogPost(BlogPost blogPost, Boolean isTopBlogPost = false)
{
  <li class="@GetBlogPostClassNames(isTopBlogPost)">
    <div class="blog-post__heading">
      <div class="blog-post__heading--sub">
        @blogPost.CreatedDate.ToShortDateString()
      </div>
      <div class="heading__title">
        @blogPost.Title
      </div>
    </div>
    <div class="blog-post__content">
      @blogPost.Content
    </div>
  </li>
}

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>JS Bin</title>
  <link rel="stylesheet" type="text/css" href="~/Static/index.css" />
</head>
<body>
  <div class="container">
    <h1 class="page-title">
      My Blog
    </h1>

    <ul class="blog-posts">
      @foreach (var blogPost in Model.TopBlogPosts)
      {
        @RenderBlogPost(blogPost, isTopBlogPost: true)
      }

      @foreach (var blogPost in Model.BlogPosts.OrderBy(blogPost => blogPost.CreatedDate))
      {
        @RenderBlogPost(blogPost, isTopBlogPost: false)
      }
    </ul>
  </div>
</body>
</html>